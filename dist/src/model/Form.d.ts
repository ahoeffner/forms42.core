import { Block } from './Block.js';
import { Record } from './Record.js';
import { DataModel } from './DataModel.js';
import { Form as ViewForm } from '../view/Form.js';
import { DataSource } from './interfaces/DataSource.js';
import { EventTransaction } from './EventTransaction.js';
import { Form as InterfaceForm } from '../public/Form.js';
import { QueryManager } from './relations/QueryManager.js';
import { EventType } from '../control/events/EventType.js';
import { BlockCoordinator } from './relations/BlockCoordinator.js';
export declare class Form {
    private block$;
    private viewfrm$;
    private finalized$;
    private parent$;
    private datamodel$;
    private qrymgr$;
    private blocks$;
    private evttrans$;
    private blkcord$;
    constructor(parent: InterfaceForm);
    get name(): string;
    get block(): Block;
    get view(): ViewForm;
    get parent(): InterfaceForm;
    set dirty(flag: boolean);
    get dirty(): boolean;
    get finalized(): boolean;
    get QueryManager(): QueryManager;
    get BlockCoordinator(): BlockCoordinator;
    getDirtyCount(): number;
    synchronize(): void;
    undo(): Promise<boolean>;
    clear(): void;
    flush(): Promise<boolean>;
    getBlocks(): Block[];
    getBlock(name: string): Block;
    get datamodel(): DataModel;
    setDataSource(blk: string, source: DataSource): void;
    get eventTransaction(): EventTransaction;
    hasEventTransaction(block: Block): boolean;
    checkEventTransaction(event: EventType, block: Block): Promise<boolean>;
    setEventTransaction(event: EventType, block: Block, record: Record): Promise<boolean>;
    endEventTransaction(_event: EventType, block: Block, _success: boolean): void;
    addBlock(block: Block): void;
    finalize(): Promise<void>;
    getQueryMaster(): Block;
    enterQuery(block: Block | string): Promise<boolean>;
    clearBlock(block: Block): void;
    private clearQueryFilters;
    private clearDetailDepencies;
    private enterQueryMode;
    cancelQueryMode(block: Block | string): void;
    queryFieldDetails(block: string, field: string): Promise<boolean>;
    executeQuery(block: Block | string, keep: boolean, flush: boolean): Promise<boolean>;
    initControlBlocks(): Promise<void>;
    clearEventTransactions(): void;
}
